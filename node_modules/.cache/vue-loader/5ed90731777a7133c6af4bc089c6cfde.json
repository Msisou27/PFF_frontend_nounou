{"remainingRequest":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cedricmaglione/MonPFF/PFF_frontend_nounou/src/components/Addproduct.vue?vue&type=template&id=1ddf605e&scoped=true&","dependencies":[{"path":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/src/components/Addproduct.vue","mtime":1597696957327},{"path":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cedricmaglione/MonPFF/PFF_frontend_nounou/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}